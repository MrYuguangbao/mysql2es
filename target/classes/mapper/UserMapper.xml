<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0 //EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mysql2es.mybatis.mapper.UserMapper">

    <resultMap id="userMap" type="com.example.mysql2es.mybatis.model.SysUser">
        <id property="id" column="id" />
        <result property="userName" column="user_name" />
        <result property="userPassword" column="user_password" />
        <result property="userEmail" column="user_email" />
        <result property="userInfo" column="user_info" />
        <result property="headImg" column="head_img" jdbcType="BLOB" />
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="userColumn">
        id,user_name,user_password,user_email,user_info,head_img,create_time,update_time
    </sql>

    <select id="selectById" parameterType="long" resultMap="userMap">
        select
        <include refid="userColumn" />
        from sys_user
        where id = #{id}
    </select>

    <select id="selectAll" resultType="com.example.mysql2es.mybatis.model.SysUser">
        select
        <include refid="userColumn" />
        from sys_user
    </select>

    <select id="selectRoleByUserId" parameterType="long"
            resultType="com.example.mysql2es.mybatis.model.SysRole">
        select
            sr.id,
            sr.role_name,
            sr.enabled,
            sr.create_by,
            sr.create_time,
            sr.update_time
        from sys_user su inner join sys_user_role sur on su.id = sur.user_id
        inner join sys_role sr on sur.role_id = sr.id
        where su.id = #{id}
    </select>

    <select id="selectRoleByUserIdExtends" parameterType="long"
            resultType="com.example.mysql2es.mybatis.model.SysRoleExtends">
        select
            sr.id,
            sr.role_name,
            sr.enabled,
            sr.create_by,
            sr.create_time,
            sr.update_time,
            su.user_name as 'user.userName',
            su.user_email as 'user.userEmail'
        from sys_user su inner join sys_user_role sur on su.id = sur.user_id
        inner join sys_role sr on sur.role_id = sr.id
        where su.id = #{id}
    </select>

    <insert id="insert">
        insert into sys_user(id,user_name,user_password,user_email,user_info,head_img,create_time,update_time)
        values(#{id},#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB}
        ,#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(user_name,user_password,user_email,user_info,head_img,create_time,update_time)
        values(#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB}
        ,#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insert3" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(user_name,user_password,user_email,user_info,head_img,create_time,update_time)
        values(#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB}
        ,#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
        <selectKey keyProperty="id" keyColumn="id" resultType="long" order="AFTER">
            select last_insert_id()
        </selectKey>

    </insert>

    <update id="updateById">
        update sys_user
        set user_name = #{userName},
            user_password = #{userPassword},
            user_email = #{userEmail},
            user_info = #{userInfo},
            head_img = #{headImg, jdbcType=BLOB},
            update_time = #{updateTime, jdbcType=TIMESTAMP}
        where id = #{id}
    </update>

</mapper>